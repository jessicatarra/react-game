{"version":3,"sources":["score.js","header.js","wrapper.js","token.js","button.js","table.js","rules.js","App.js","serviceWorker.js","index.js"],"names":["ScoreStyle","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrapperStyled","Wrapper","children","shadow","keyframes","TokenStyled","name","props","color","base","border","isShadowAnimated","colors","paper","rock","scissors","default","Token","onClick","className","src","alt","ButtonStyled","WhiteButton","Button","TableStyled","playing","elements","Table","setScore","useState","results","setResults","housePick","setHousePick","setPlaying","pick","setPick","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playWithIa","RulesStyled","Rules","visible","setVisible","handleToggleClick","createContext","AppStyled","main","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03fe0fee.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ScoreContext } from './App'\r\n\r\nconst ScoreStyle = styled.div`\r\n    background: white;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    border-radius: .5em;\r\n    width: 80px;\r\n    small {\r\n        color: hsl(229, 64%, 46%);\r\n        text-transform: uppercase;\r\n        font-size: 10px;\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n    }\r\n    p {\r\n        color: hsl(229, 25%, 31%);\r\n        font-size: 40px;\r\n        margin: 0;\r\n        font-weight: 700;\r\n        letter-spacing: -1px;\r\n        position: relative;\r\n        left: -2.5px;\r\n    }\r\n`\r\n\r\nexport default function Score() {\r\n    const { score } = useContext(ScoreContext)\r\n    return (\r\n        <ScoreStyle>\r\n            <small>Score</small>\r\n            <p>{score}</p>\r\n        </ScoreStyle>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Score from './score.js'\r\n\r\nconst HeaderStyled = styled.div`\r\n    border: 3px solid rgba(255,255,255, .29);\r\n    color: white;\r\n    padding: 12px 12px 12px 23px;\r\n    border-radius: .5em;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    h1 {\r\n        font-size: 21px;\r\n        text-transform: uppercase;\r\n        line-height: 16px;\r\n        font-weight: 700;\r\n    }\r\n`\r\n\r\nexport default function Header() {\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>Rock <br />Paper <br />Scissors</h1>\r\n            <Score />\r\n        </HeaderStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 1024px;\r\n    margin: auto;\r\n\r\n`\r\n\r\nexport default function Wrapper({ children }) {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst shadow = keyframes`\r\n  to {\r\n    box-shadow: 0 0 0 40px rgba(255,255,255,.04), 0 0 0 80px rgba(255,255,255,.04), 0 0 0 120px rgba(255,255,255,.02);\r\n    transform: rotateY(360deg) scale(1.1);\r\n  }\r\n`\r\n\r\nconst TokenStyled = styled.div`\r\n    width: 130px;\r\n    height: 125px;\r\n    padding: ${({ name }) => (name === 'default') ? '16px' : '0'};\r\n    border: 15px solid ${(props) => props.color.base};\r\n    box-sizing: border-box;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    box-shadow: 0 5px 0px ${(props) => props.color.border};\r\n    position: relative;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n    ${({ isShadowAnimated }) => isShadowAnimated && 'box-shadow: 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.04), 0 0 0 0px rgba(255,255,255,.02);'}\r\n    animation: 1s ${({ isShadowAnimated }) => isShadowAnimated ? shadow : ''} forwards;\r\n    &:active {\r\n        transform: scale(.9);\r\n    }\r\n    .box {\r\n        background: ${({ name }) => (name === 'default') ? '#122343' : 'white'};\r\n        box-shadow: 0 -4px 0 ${({ name }) => (name === 'default') ? 'transparent' : '#BABFD4'}; \r\n        flex: 1;\r\n        align-self: stretch;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nconst colors = {\r\n    paper: {\r\n        base: 'hsl(230, 89%, 62%)',\r\n        border :'hsl(230, 89%, 65%)'\r\n    },\r\n    rock: {\r\n        base: 'hsl(349, 71%, 52%)',\r\n        border :'hsl(349, 70%, 56%)'\r\n    },\r\n    scissors: {\r\n        base: 'hsl(39, 89%, 49%)',\r\n        border : 'hsl(40, 84%, 53%)'\r\n    },\r\n    default: {\r\n        base: 'transparent',\r\n        border : 'transparent'\r\n    }\r\n}\r\n\r\nexport default function Token({ name = 'default', onClick, isShadowAnimated = false }){\r\n    function handleClick() {\r\n        if (onClick) {\r\n            onClick(name)\r\n        }\r\n    }\r\n    const color = colors[name]\r\n    return (\r\n        <TokenStyled color={color} onClick={handleClick} name={name} isShadowAnimated={isShadowAnimated}>\r\n            <div className=\"box\">\r\n             <img src={`./images/icon-${name}.svg`}alt=\"\" />   \r\n            </div>\r\n        </TokenStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ButtonStyled = styled.div`\r\n    display: inline-flex;\r\n    border: 1px solid white;\r\n    border-radius: .5em;\r\n    min-width: 128px;\r\n    padding: .7em;\r\n    box-sizing: border-box;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2.5px;\r\n    :hover {\r\n    background: white;\r\n    color: #101a3f;\r\n  }\r\n    \r\n`\r\n\r\n\r\nfunction Button({ children, ...props}) {\r\n    return (\r\n        <ButtonStyled {...props}>\r\n            {children}            \r\n        </ButtonStyled>\r\n    )\r\n}\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n    background: white; \r\n    color: hsl(229, 25%, 31%);\r\n    min-width: 220px;\r\n`\r\n\r\nexport default Button","import React, { useState, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Token from './token'\r\nimport { WhiteButton }from './button'\r\nimport { ScoreContext } from './App'\r\n\r\n\r\nconst TableStyled = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 130px 130px;\r\n    justify-content: center; \r\n    justify-items: center;\r\n    grid-gap: 70px;\r\n    margin: 2em 0;\r\n    position: relative;\r\n    & div:nth-of-type(3) {\r\n        grid-column: span 2;\r\n    }\r\n    .in-game {\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-size: .8em;\r\n        font-weight: 700;\r\n        letter-spacing: 1px;\r\n    }\r\n    .results{\r\n        text-align: center;\r\n        h2{\r\n        text-transform: uppercase;\r\n        font-weight: 700;  \r\n        font-size: 56px;\r\n        margin: 10px; \r\n        }\r\n        \r\n    }\r\n    .triangle {\r\n        display: ${({ playing }) => !playing ? 'block' : 'none'};\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        background: url(./images/bg-triangle.svg) no-repeat center; \r\n    }\r\n`\r\n\r\nconst elements = [\r\n    'paper',\r\n    'scissors',\r\n    'rock',\r\n]\r\n\r\nfunction Table() {\r\n    const { score, setScore } = useContext(ScoreContext)\r\n    const [results, setResults] = useState('')\r\n    const [housePick, setHousePick] = useState('default')\r\n    const [playing, setPlaying] = useState(false)\r\n    const [pick, setPick] = useState('')\r\n    function getRandomInt(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    function launchHousePick() {\r\n        return new Promise ((resolve, reject) => {\r\n            let pick\r\n            const interval = setInterval(() => {\r\n                pick = elements[getRandomInt(0,3)]\r\n                setHousePick(pick)\r\n            }, 75)\r\n            setTimeout(() => {\r\n                clearInterval(interval)\r\n                resolve(pick)\r\n            },2000)\r\n        })\r\n    }\r\n    async function onClick(name) {\r\n        setPlaying(true)\r\n        setPick(name)\r\n        const house = await launchHousePick()\r\n        const results = playWithIa(name, house)\r\n        setResults(results)\r\n        if (results === 'win') {\r\n            setScore(score + 1)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function playWithIa(pick, housePick) {\r\n        \r\n        if (housePick === pick) {\r\n            return 'draw'\r\n        }\r\n        if (pick === 'paper') {\r\n            if (housePick === 'scissors') {\r\n                return 'lose'\r\n            }\r\n            if (housePick === 'rock') {\r\n                return 'win'\r\n            }\r\n        }\r\n        if (pick === 'scissors') {\r\n            if (housePick === 'paper') {\r\n                return 'win'\r\n            }\r\n            if (housePick === 'rock') {\r\n                return 'lose'\r\n            }\r\n        }\r\n        if (pick === 'rock') {\r\n            if (housePick === 'paper') {\r\n                return 'lose'\r\n            }\r\n            if (housePick === 'scissors') {\r\n                return 'win'\r\n            }\r\n        }\r\n    } \r\n\r\n    function handleTryAgainClick() {\r\n        setPlaying(false)\r\n        setResults('')\r\n    }\r\n    \r\n    return (\r\n        <TableStyled  playing={playing}>\r\n            <span className=\"triangle\"></span>\r\n            {\r\n                !playing ? (\r\n                    <>\r\n                        <Token name=\"rock\" onClick={onClick} />\r\n                        <Token name=\"scissors\" onClick={onClick} />\r\n                        <Token name=\"paper\" onClick={onClick} />  \r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            <div className=\"in-game\">\r\n                                <Token name={pick} isShadowAnimated={(results === 'win')}  />   \r\n                                <p> Your Picked</p>\r\n                            </div>\r\n                            <div className=\"in-game\">\r\n                                <Token name = {housePick} isShadowAnimated={(results === 'lose')} /> \r\n                                <p>The house picked</p>\r\n                            </ div>\r\n                            <div className=\"results\">\r\n                            {\r\n                                results && (\r\n                                    <>\r\n                                    <h2>YOU {results}</h2>\r\n                                    <WhiteButton onClick={handleTryAgainClick}>\r\n                                        Try Again\r\n                                    </WhiteButton>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            </div>\r\n                        </>\r\n                )\r\n            }\r\n   \r\n        </TableStyled>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './button'\r\n\r\n\r\nconst RulesStyled = styled.div`\r\n    text-align: center;\r\n    .close-button {\r\n    margin-top: 2em;\r\n    }\r\n    .rules-overlay {\r\n        background: white;\r\n        padding: 4em 0;\r\n        position: fixed;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 2;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        h2 {\r\n            color: hsl(229, 25%, 31%);\r\n            text-transform: uppercase;\r\n            font-weight: 700;\r\n            letter-spacing: -1px;\r\n            margin-bottom: 1em;\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Rules() {\r\n    const [visible, setVisible] = useState(false)\r\n    function handleToggleClick() {\r\n      setVisible(!visible)\r\n    }\r\n    return (\r\n        <RulesStyled>\r\n             {\r\n                (visible) && (\r\n                <div className=\"rules-overlay\">\r\n                    <h2>Rules</h2>\r\n                    <img src=\"./images/image-rules.svg\" alt=\"Game Rules\" />\r\n                    <img className=\"close-button\" onClick={handleToggleClick} src=\"./images/icon-close.svg\" alt=\"Close the game rules\" />\r\n                </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick} >\r\n                Rules\r\n            </Button>\r\n        </RulesStyled>\r\n    )\r\n}\r\n","import React, { createContext, useState }  from 'react';\nimport './App.css';\nimport Header from './header' \nimport styled from 'styled-components'\nimport Wrapper from './wrapper'\nimport Table from './table'\nimport Rules from './rules'\n\nexport const ScoreContext = createContext()\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, hsl(214, 47%, 23%), hsl(237, 49%, 15%));\n  color: white;\n  font-family: 'Barlow Semi Condensed', sans-serif;\n  .app-content {\n    padding: 2em;\n    box-sizing: border-box;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  return (\n    <ScoreContext.Provider value={\n      {score,\n      setScore}\n    }>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header />\n            <Table />\n            <Rules />         \n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}